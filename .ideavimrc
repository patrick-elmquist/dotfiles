" Inherit the config from regular vim
source ~/.vim/commons.vim

" ------------------
" IdeaVim Options
" ------------------
set idearefactormode=keep       " Keep the mode when renaming
set ideajoin                    " Use IDE join for joining

" ------------------
" Plugins
" ------------------
set commentary                  " Commands: gcc, gc + motion, v_gc
set surround                    " Commands: ys, cs, ds, S
set ReplaceWithRegister         " Commands: gr, gr
set argtextobj                  " Commands: aa, ia
set vim-paragraph-motion        " {} will treat lines with only whitespace as empty
set highlightedyank             " Highlight the yanked text for a short duration
set NERDTree                    " Navigate the Project tree
set exchange                    " Exchange blocks of code with cx
set quickscope                  " Show hints when using fFtT, requires IdeaVim-Quickscope

// uncomment this to only enable quick scope on f/t press
// let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

" Supposed to make ideaVim work better with dialogs.
set ideavimsupport+=singleline

" ------------------
" General Mappings
" ------------------
noremap <leader>n :action Inline<CR>
noremap <leader>m :action ExtractFunction<CR>
noremap <leader>v :action IntroduceVariable<CR>
noremap <leader>f :action FindInPath<CR>
noremap <leader>F :action FindUsages<CR>
noremap <leader>l :action ReformatCode<CR>
noremap <leader>r :action RenameElement<CR>
noremap <leader>R :action Run<CR>
noremap <leader>t :action Refactorings.QuickListPopupAction<CR>
noremap <leader>o :action GotoFile<CR>
noremap <leader>s :action FileStructurePopup<CR>

noremap <leader>a :action GotoAction<CR>
noremap <leader>e :action RecentFiles<CR>
noremap <leader>E :action RecentLocations<CR>
noremap <leader>g :action GotoNextError<CR>
noremap <leader>G :action GotoPreviousError<CR>
noremap <leader>q :action QuickJavaDoc<CR>
noremap <leader>Q :action QuickImplementations<CR>
noremap <leader>d :action ShowErrorDescription<CR>
noremap <leader>u :action GotoSuperMethod<CR>
noremap <leader>b :action GotoDeclaration<CR>
noremap <leader>B :action GotoImplementation<CR>
noremap <leader>i :action OptimizeImports<CR>
noremap <leader>I :action ImplementMethods<CR>
noremap <leader>j :NERDTree<CR>

" ------------------
" Probation line
" Based on: https://towardsdatascience.com/the-essential-ideavim-remaps-291d4cd3971b
" ------------------
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

nnoremap <c-\> :action SplitVertically<CR>
nnoremap <c--> :action SplitHorizontally<CR>
nnoremap <c-=> :action Unsplit<CR>

sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

nnoremap <TAB> :action PreviousTab<CR>
nnoremap <s-TAB> :action NextTab<CR>

" nnoremap <leader>en :action EditSourceInNewWindow<CR>
" nnoremap <leader>n :action NextWindow<CR>
" nnoremap <leader>q :action CloseContent<CR>
" nnoremap <leader>qa :action CloseAllEditors<CR>

vnoremap < <gv
vnoremap > >gv

nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

nnoremap <leader>h  :action LocalHistory.ShowHistory<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap <leader>uu :action Git.CompareWithBranch<CR>
noremap <c-/> :action FindInPath<CR>

nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>

nnoremap <leader><CR> :action IntentionActionAsAction_org.jetbrains.kotlin.idea.intentions.ChopArgumentListIntention<CR>
nnoremap <leader><BS> :action IntentionActionAsAction_org.jetbrains.kotlin.idea.intentions.JoinArgumentListIntention<CR>
nnoremap <leader>; :action IntentionActionAsAction_org.jetbrains.kotlin.idea.intentions.AddNamesToCallArgumentsIntention<CR>:action IntentionActionAsAction_org.jetbrains.kotlin.idea.intentions.ChopArgumentListIntention<CR>

" Workaround for P overwriting yank register in Visual mode
" https://youtrack.jetbrains.com/issue/VIM-2868/Pasting-in-visual-mode-with-P-should-not-replace-yank-register-like-when-pasting-with-p
xnoremap P "0p
