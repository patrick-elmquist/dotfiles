" Inherit the config from regular vim
source ~/.vim/commons.vim

set visualbell                  " turn off audio

" ------------------
" IdeaVim Options
" ------------------
set idearefactormode=keep       " Keep the mode when renaming
set ideajoin                    " Use IDE join for joining

" ------------------
" Plugins
" ------------------
set commentary                  " Commands: gcc, gc + motion, v_gc
set surround                    " Commands: ys, cs, ds, S
set ReplaceWithRegister         " Commands: gr, gr
set argtextobj                  " Commands: aa, ia
set vim-paragraph-motion        " {} will treat lines with only whitespace as empty
set highlightedyank             " Highlight the yanked text for a short duration
set exchange                    " Exchange blocks of code with cx
set quickscope                  " Show hints when using fFtT, requires IdeaVim-Quickscope
set multiple-cursors

nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence
nmap <S-C-n> <Plug>AllWholeOccurrences
xmap <S-C-n> <Plug>AllWholeOccurrences
nmap g<S-C-n> <Plug>AllOccurrences
xmap g<S-C-n> <Plug>AllOccurrences

// uncomment this to only enable quick scope on f/t press
// let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

" Supposed to make ideaVim work better with dialogs.
set ideavimsupport+=singleline

" ------------------
" General Mappings
" ------------------
nnoremap <leader><leader> :action GotoNextError<CR>

noremap <leader>a :action GotoAction<CR>
noremap <leader>A :action Annotate<CR>

noremap <leader>b :action GotoTypeDeclaration<CR>
noremap <leader>B :action GotoImplementation<CR>

noremap <leader>d :action ShowErrorDescription<CR>

noremap <leader>e :action RecentFiles<CR>
noremap <leader>E :action RecentLocations<CR>

noremap <leader>f :action FindUsages<CR>
noremap <leader>F :action ChangeSplitOrientation<CR>

noremap <leader>g :action GotoNextError<CR>
noremap <leader>G :action GotoPreviousError<CR>

nnoremap <leader>h  :action LocalHistory.ShowHistory<CR>
nnoremap <leader>H  :action Vcs.ShowTabbedFileHistory<CR>

noremap <leader>i :action OptimizeImports<CR>
noremap <leader>I :action ImplementMethods<CR>

noremap <leader>j :action TextEditorWithPreview.Layout.EditorOnly<CR>
noremap <leader>J :action TextEditorWithPreview.Layout.EditorAndPreview<CR>

noremap <leader>l :action ReformatCode<CR>

noremap <leader>m :action ExtractFunction<CR>

noremap <leader>n :action Inline<CR>

noremap <leader>o :action GotoFile<CR>

noremap <leader>q :action QuickJavaDoc<CR>
noremap <leader>Q :action HideAllWindows<CR>

noremap <leader>r :action RenameElement<CR>
noremap <leader>R :action Run<CR>

noremap <leader>s :action FileStructurePopup<CR>

noremap <leader>t :action Refactorings.QuickListPopupAction<CR>
noremap <leader>T :action GotoTest<CR>

noremap <leader>u :action GotoSuperMethod<CR>
noremap <leader>U :action Git.CompareWithBranch<CR>

noremap <leader>v :action IntroduceVariable<CR>

noremap <leader>w :action QuickImplementations<CR>
noremap <leader><CR> :action SelectInProjectView<CR>

" ------------------
" Probation line
" Based on: https://towardsdatascience.com/the-essential-ideavim-remaps-291d4cd3971b
" ------------------
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

nnoremap <c-\> :action SplitVertically<CR>
nnoremap <c--> :action SplitHorizontally<CR>
nnoremap <c-=> :action Unsplit<CR>

sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

nnoremap <c-s-left> <c-w>h
nnoremap <c-s-right> <c-w>l
nnoremap <c-s-down> <c-w>j
nnoremap <c-s-up> <c-w>k

nnoremap <c-left> <c-w>h
nnoremap <c-right> <c-w>l
nnoremap <c-down> <c-w>j
nnoremap <c-up> <c-w>k

" nnoremap <TAB> :action PreviousTab<CR>
" nnoremap <s-TAB> :action NextTab<CR>
nnoremap <TAB> :action NextSplitter<CR>
nnoremap <s-TAB> :action OpenEditorInOppositeTabGroup<CR>
nnoremap <c-TAB> :action EditSourceInNewWindow<CR>

nnoremap <leader>wn :action EditSourceInNewWindow<CR>
" nnoremap <leader>n :action NextWindow<CR>
" nnoremap <leader>q :action CloseContent<CR>
" nnoremap <leader>qa :action CloseAllEditors<CR>

vnoremap < <gv
vnoremap > >gv

nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

nnoremap gd :action GotoDeclaration<CR>
nnoremap gf :action GotoTypeDeclaration<CR>
nnoremap gx :action GoToLinkTarget<CR>
nnoremap gr :action Vcs.RollbackChangedLines<CR>

noremap <c-/> :action FindInPath<CR>

nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>
